<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Public Chat</title>
    <!-- Bootstrap CSS -->
    <link
      rel="stylesheet"
      href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
    />
    <!-- Custom CSS -->
    <style>
      body {
        font-family: Arial, sans-serif;
        background-color: #110e26;
      }

      #navbar {
        border: 2px solid #000000;
        height: 50px;
        background-color: #292851;
      }

      #box-nav {
        border-radius: 6px;
        background-color: #17266e;
        padding-left: 10px;
        padding-right: 10px;
        padding-top: 4px;
        padding-bottom: 4px;
      }

      #logo {
        height: 6px;
      }

      #logo p {
        margin: 0;
        line-height: 6px;
        font-size: xx-large;
        color: #599ad1;
      }

      #box-nav p {
        margin: 0;
        color: #a3bdd8;
      }

      #chat {
        height: 500px;
        overflow-y: scroll;
        padding: 10px;
        background-color: #171b38;
        color: #737799;
      }

      #chat .message {
        margin-bottom: 10px;
      }

      #chat .message .name {
        font-weight: bold;
      }

      #chat .message .text {
        margin-top: 5px;
      }

      #content {
        margin-top: 10px;
        margin-right: 5px;
        box-sizing: border-box;
      }

      #send-button {
        margin-top: 10px;
      }

      #message-input {
        align-items: center;
      }
    </style>
    <!--ubah ini jadi komen kalau hosting di glitch -->
    <script src="http://localhost:3000/socket.io/socket.io.js"></script>
    <!--ubah ini jadi unkomen kalau hosting di glitch ganti sesuai dengan url di glitch.com-->
    <!-- <script src="https://ionian-simplistic-meadow.glitch.me/socket.io/socket.io.js"></script> -->
  </head>
  <body>
    <div id="navbar" class="d-flex justify-content-between align-items-center">
      <div id="logo" class="ml-5"><p>AntiAyam</p></div>
      <div id="box-nav" class="mr-5"><p><%= data %></p></div>
    </div>
    <!-- Chat Section -->
    <section id="chatSection" class="container mt-5">
      <div class="row justify-content-center">
        <div class="col-md-6">
          <h2 style="color: #7b7e9a">Public Chat</h2>
          <div id="chat"></div>
          <form action="/message/send" method="POST" id="messageForm">
            <div id="message-input" class="d-flex">
              <input
                type="text"
                class="form-control"
                name="content"
                id="content"
                placeholder="Enter your message"
                autocomplete="off"
                required
              />
              <button type="submit" id="send-button" class="btn btn-primary">
                Send
              </button>
            </div>
          </form>
        </div>
      </div>
    </section>

    <!-- Bootstrap & jQuery JS -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <!-- Custom JS -->
    <script>
      let socket = io();
      const username = localStorage.getItem("username");
      if (username) {
        // Gunakan data respons sesuai kebutuhan
        socket.emit("new-user", username);
      } else {
        console.log("tidak ada response data");
      }

      const sendForm = document.getElementById("messageForm");
      const contentInput = document.getElementById("content");
      const messageContainer = document.getElementById("chat");

      socket.on("chat-message", (data) => {
        appendMessage(data);
      });

      sendForm.addEventListener("submit", async (e) => {
        e.preventDefault(); // Mencegah pembaruan halaman

        const formData = new FormData(sendForm); // Buat objek FormData
        const payload = new URLSearchParams(formData);

        try {
          const response = await fetch("/message/send", {
            method: "POST",
            body: payload,
          });

          if (response.status === 201) {
            // Jika permintaan berhasil, tambahkan pesan ke kontainer
            const result = await response.json();
            const message = contentInput.value;
            const data = {
              name: username,
              message: message,
            };
            appendMessageYou(data);

            // Memanggil fungsi socket send-chat-message
            socket.emit("send-chat-message", message);

            // Hapus teks dari input
            contentInput.value = "";
          } else {
            // Tangani kesalahan jika diperlukan
            console.error("Gagal mengirim pesan.");
          }
        } catch (error) {
          console.error("Terjadi kesalahan: ", error);
        }
      });

      function appendMessage(data) {
        var name = data.name;
        var text = data.message;

        var messageElement = $("<div>").addClass("message");
        var nameElement = $("<div>").addClass("name").text(name);
        var textElement = $("<div>").addClass("text").text(text);

        messageElement.append(nameElement);
        messageElement.append(textElement);

        $("#chat").append(messageElement);
      }

      function appendMessageYou(data) {
        var name = data.name;
        var text = data.message;

        var messageElement = $("<div>").addClass("message");
        var nameElement = $("<div>")
          .addClass("name")
          .text(name)
          .css("text-align", "right");
        var textElement = $("<div>")
          .addClass("text")
          .text(text)
          .css("text-align", "right");

        messageElement.append(nameElement);
        messageElement.append(textElement);

        $("#chat").append(messageElement);
      }
    </script>
  </body>
</html>
